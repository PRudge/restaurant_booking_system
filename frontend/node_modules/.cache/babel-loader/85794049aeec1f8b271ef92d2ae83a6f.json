{"ast":null,"code":"import _classCallCheck from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/src/App.js\";\nimport React, { Component } from 'react';\nimport RestaurantViewContainer from \"./containers/RestaurantViewContainer\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport NewBookingContainer from \"./containers/NewBookingContainer.js\";\nimport EditBookingComponent from \"./Components/EditBookingComponent.js\";\nimport CustomerListContainer from \"./containers/CustomerListContainer.js\";\nimport Request from \"./helpers/requests.js\";\nimport CustomerBookings from \"./Components/CustomerBookings\";\nimport CustomerTotalAmountSpent from \"./Components/CustomerTotalAmountSpent\";\nimport './App.css';\nimport NavBar from \"./NavBar.js\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      tables: [],\n      customers: [],\n      bookings: [],\n      allBookings: []\n    };\n    _this.getBookingsByDate = _this.getBookingsByDate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getBookingsByHour = _this.getBookingsByHour.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getData = _this.getData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getData\",\n    value: function getData() {\n      var _this2 = this;\n\n      var request = new Request();\n      request.get('/customers').then(function (res) {\n        _this2.setState({\n          customers: res._embedded.customers\n        });\n\n        console.log(_this2.state.customers);\n      });\n      this.getTables();\n      this.allBookings();\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getData();\n    }\n  }, {\n    key: \"allBookings\",\n    value: function allBookings() {\n      var _this3 = this;\n\n      var request = new Request();\n      request.get('/bookings/').then(function (res) {\n        _this3.setState({\n          allBookings: res._embedded.bookings\n        });\n\n        _this3.setState({\n          bookings: []\n        });\n      });\n    }\n  }, {\n    key: \"getTables\",\n    value: function getTables() {\n      var _this4 = this;\n\n      var request = new Request();\n      request.get('/restaurantTables/').then(function (res) {\n        _this4.setState({\n          tables: res._embedded.restaurantTables\n        });\n\n        var allTables = _this4.state.tables;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = allTables[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var table = _step.value;\n            table.taken = false;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        _this4.setState({\n          tables: allTables\n        });\n      });\n    }\n  }, {\n    key: \"getBookingsByDate\",\n    value: function getBookingsByDate(url) {\n      var _this5 = this;\n\n      console.log('date');\n      var request = new Request();\n      request.get(url).then(function (res) {\n        _this5.setState({\n          bookings: res\n        });\n\n        _this5.getTables();\n      });\n    }\n  }, {\n    key: \"getBookingsByHour\",\n    value: function getBookingsByHour(url) {\n      var _this6 = this;\n\n      console.log('hour');\n      var request = new Request();\n      request.get(url).then(function (res) {\n        _this6.setState({\n          bookings: res\n        });\n\n        _this6.updateTakenTables();\n      });\n    }\n  }, {\n    key: \"resetTables\",\n    value: function resetTables() {\n      var newTableState = this.state.tables;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = newTableState[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var table = _step2.value;\n          table.taken = false;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"updateTakenTables\",\n    value: function updateTakenTables() {\n      this.resetTables();\n      var newTableState = this.state.tables;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.state.bookings[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var booking = _step3.value;\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = newTableState[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var freeTable = _step4.value;\n\n              if (booking.restaurantTable.id === freeTable.tableNumber) {\n                freeTable.taken = true;\n              }\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this.setState({\n        tables: newTableState\n      });\n    }\n  }, {\n    key: \"editBooking\",\n    value: function editBooking(_ref) {\n      var id = _ref.id,\n          date = _ref.date,\n          time = _ref.time,\n          table = _ref.table,\n          customer = _ref.customer;\n      console.log('id', id, 'date', date, 'time', time, 'table', table, 'customer', customer);\n      var request = new Request();\n      request.patch(\"/bookings/\".concat(id), {\n        \"date\": date,\n        \"time\": time,\n        \"customer\": \"http://localhost:8080/customers/\".concat(customer),\n        \"restaurantTable\": \"http://localhost:8080/restaurantTables/\".concat(table)\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(RestaurantViewContainer, {\n            getAllCustomers: _this7.componentWillMount,\n            getBookingsByDate: _this7.getBookingsByDate,\n            getBookingsByHour: _this7.getBookingsByHour,\n            customers: _this7.state.customers,\n            bookings: _this7.state.bookings,\n            tables: _this7.state.tables,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/newbooking/:id/:date/:time\",\n        render: function render(props) {\n          var id = props.match.params.id;\n          var date = props.match.params.date;\n          var time = props.match.params.time;\n          return React.createElement(NewBookingContainer, {\n            id: id,\n            date: date,\n            time: time,\n            customers: _this7.state.customers,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/editbooking/:id\",\n        render: function render(props) {\n          var id = props.match.params.id;\n          return React.createElement(EditBookingComponent, {\n            id: id,\n            allBookings: _this7.state.allBookings,\n            editBooking: _this7.editBooking,\n            tables: _this7.state.tables,\n            customers: _this7.state.customers,\n            updateData: _this7.getData,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/customers\",\n        render: function render(props) {\n          return React.createElement(CustomerListContainer, {\n            customers: _this7.state.customers,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/customerbookings/:id\",\n        render: function render(props) {\n          var id = props.match.params.id;\n          var customerWithBookings;\n          var _iteratorNormalCompletion5 = true;\n          var _didIteratorError5 = false;\n          var _iteratorError5 = undefined;\n\n          try {\n            for (var _iterator5 = _this7.state.customers[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n              var customer = _step5.value;\n\n              if (customer.id == id) {\n                customerWithBookings = customer;\n              }\n            }\n          } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                _iterator5.return();\n              }\n            } finally {\n              if (_didIteratorError5) {\n                throw _iteratorError5;\n              }\n            }\n          }\n\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }, React.createElement(CustomerBookings, {\n            customer: customerWithBookings,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          }), React.createElement(CustomerTotalAmountSpent, {\n            customer: customerWithBookings,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/src/App.js"],"names":["React","Component","RestaurantViewContainer","BrowserRouter","Router","Route","Switch","NewBookingContainer","EditBookingComponent","CustomerListContainer","Request","CustomerBookings","CustomerTotalAmountSpent","NavBar","App","props","state","tables","customers","bookings","allBookings","getBookingsByDate","bind","getBookingsByHour","getData","request","get","then","res","setState","_embedded","console","log","getTables","restaurantTables","allTables","table","taken","url","updateTakenTables","newTableState","resetTables","booking","freeTable","restaurantTable","id","tableNumber","date","time","customer","patch","componentWillMount","match","params","editBooking","customerWithBookings"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport RestaurantViewContainer from \"./containers/RestaurantViewContainer\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport NewBookingContainer from \"./containers/NewBookingContainer.js\";\nimport EditBookingComponent from \"./Components/EditBookingComponent.js\";\nimport CustomerListContainer from \"./containers/CustomerListContainer.js\"\nimport Request from \"./helpers/requests.js\";\n\nimport CustomerBookings from \"./Components/CustomerBookings\"\nimport CustomerTotalAmountSpent from \"./Components/CustomerTotalAmountSpent\"\n\nimport './App.css';\nimport NavBar from \"./NavBar.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      tables: [],\n      customers: [],\n      bookings: [],\n      allBookings: []\n    }\n    this.getBookingsByDate = this.getBookingsByDate.bind(this)\n    this.getBookingsByHour = this.getBookingsByHour.bind(this)\n    this.getData = this.getData.bind(this)\n  }\n\n  getData(){\n    const request = new Request();\n    request.get('/customers')\n      .then(res => {\n        this.setState({customers: res._embedded.customers})\n        console.log(this.state.customers)\n      })\n\n    this.getTables()\n    this.allBookings()\n  }\n\n  componentWillMount() {\n    this.getData()\n  }\n\n  allBookings(){\n    const request = new Request();\n    request.get('/bookings/')\n      .then(res => {\n        this.setState({allBookings: res._embedded.bookings})\n        this.setState({bookings: []})\n      })\n  }\n\n  getTables() {\n    const request = new Request();\n    request.get('/restaurantTables/')\n      .then(res => {\n        this.setState({tables: res._embedded.restaurantTables})\n        const allTables = this.state.tables\n        for (const table of allTables) {\n          table.taken = false;\n        }\n        this.setState({tables: allTables})\n      })\n  }\n\n\n\n  getBookingsByDate(url) {\n    console.log('date')\n    const request = new Request();\n    request.get(url)\n      .then(res => {\n        this.setState({bookings: res})\n        this.getTables()\n      })\n  }\n\n  getBookingsByHour(url) {\n    console.log('hour')\n    const request = new Request();\n    request.get(url)\n      .then(res => {\n        this.setState({bookings: res})\n        this.updateTakenTables()\n      })\n  }\n\n  resetTables() {\n    const newTableState = this.state.tables;\n      for (const table of newTableState) {\n        table.taken = false;\n        }\n      }\n\n\n  updateTakenTables() {\n    this.resetTables()\n    const newTableState = this.state.tables;\n    for (const booking of this.state.bookings) {\n      for (const freeTable of newTableState) {\n        if (booking.restaurantTable.id === freeTable.tableNumber) {\n          freeTable.taken = true;\n        }\n      }\n    }\n    this.setState({tables: newTableState})\n  }\n\n  editBooking({id, date, time, table, customer}) {\n    console.log('id', id,'date', date,'time', time,'table', table,'customer', customer)\n    const request = new Request();\n    request.patch(`/bookings/${id}`, {\n       \"date\": date,\n       \"time\": time,\n        \"customer\": `http://localhost:8080/customers/${customer}`,\n        \"restaurantTable\": `http://localhost:8080/restaurantTables/${table}`\n     })\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <Router >\n        <React.Fragment>\n          <NavBar />\n          <Switch>\n            <Route exact path = \"/\" render = {(props) => {\n              return <RestaurantViewContainer\n              getAllCustomers={this.componentWillMount}\n              getBookingsByDate={this.getBookingsByDate}\n              getBookingsByHour={this.getBookingsByHour}\n              customers={this.state.customers}\n              bookings={this.state.bookings}\n              tables={this.state.tables}/>\n              }}\n\n              />\n            <Route exact path=\"/newbooking/:id/:date/:time\" render = {(props) =>{\n                const id = props.match.params.id;\n                const date = props.match.params.date;\n                const time = props.match.params.time;\n                return <NewBookingContainer id = {id} date = {date} time={time} customers = {this.state.customers}/>\n                }}\n              />\n\n            <Route exact path=\"/editbooking/:id\" render = {(props) =>{\n                const id = props.match.params.id;\n                return <EditBookingComponent id = {id}\n                  allBookings={this.state.allBookings}\n                  editBooking={this.editBooking}\n                  tables={this.state.tables}\n                  customers={this.state.customers}\n                  updateData={this.getData}\n                  />\n                }}\n              />\n\n            <Route exact path = \"/customers\" render = {(props) => {\n                return <CustomerListContainer customers = {this.state.customers}/>\n                }} />\n                <Route exact path = \"/customerbookings/:id\" render = {(props) => {\n                      const id = props.match.params.id;\n                      let customerWithBookings;\n                      for (let customer of this.state.customers) {\n                        if (customer.id == id) {\n                          customerWithBookings = customer;\n                        }\n                      }\n\n                    return (\n                      <div>\n                      <CustomerBookings customer={customerWithBookings}/>\n                      <CustomerTotalAmountSpent customer={customerWithBookings}/>\n                      </div>\n                    )\n                    }} />\n          </Switch>\n        </React.Fragment>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}