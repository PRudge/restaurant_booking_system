{"ast":null,"code":"import _classCallCheck from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/src/Components/EditBookingComponent.js\";\nimport React, { Component } from \"react\";\nimport Request from \"../helpers/requests.js\";\n\nvar EditBookingComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditBookingComponent, _Component);\n\n  function EditBookingComponent(props) {\n    var _this;\n\n    _classCallCheck(this, EditBookingComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditBookingComponent).call(this, props));\n    _this.state = {\n      id: _this.props.id,\n      date: null,\n      time: null,\n      table: null\n    };\n    _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDateChange = _this.handleDateChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTimeChange = _this.handleTimeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // componentWillMount() {\n  //   for (const booking of this.props.allBookings) {\n  //     if (booking.id == this.state.id) {\n  //       this.setState({date: booking.date,\n  //         time: booking.time,\n  //         table: booking.restaurantTable.tableNumber})\n  //     }\n  //   }\n  // }\n\n\n  _createClass(EditBookingComponent, [{\n    key: \"handleDateChange\",\n    value: function handleDateChange(event) {\n      this.setState({\n        date: event.target.value\n      });\n    }\n  }, {\n    key: \"handleTimeChange\",\n    value: function handleTimeChange(event) {\n      this.setState({\n        time: event.target.value\n      });\n    }\n  }, {\n    key: \"handleUpdate\",\n    value: function handleUpdate(event) {\n      event.preventDefault();\n      this.setState({\n        table: event.target.table.value\n      });\n      this.verifyDuplicate(); // request.patch('bookings/', {})\n    }\n  }, {\n    key: \"verifyDuplicate\",\n    value: function verifyDuplicate() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.props.allBookings[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var existingBooking = _step.value;\n\n          if (existingBooking.time == this.state.time && existingBooking.date == this.state.date && existingBooking.restaurantTable.tableNumber == this.state.table) {\n            console.log('match');\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tables = this.props.tables.map(function (table, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: table.tableNumber,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, table.tableNumber);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Table number: \", React.createElement(\"select\", {\n        name: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, tables), \"New Date \", React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleDateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), \"New Time \", React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleTimeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), \"Save \", React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return EditBookingComponent;\n}(Component);\n\nexport default EditBookingComponent;","map":{"version":3,"sources":["/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/src/Components/EditBookingComponent.js"],"names":["React","Component","Request","EditBookingComponent","props","state","id","date","time","table","handleUpdate","bind","handleDateChange","handleTimeChange","event","setState","target","value","preventDefault","verifyDuplicate","allBookings","existingBooking","restaurantTable","tableNumber","console","log","tables","map","index"],"mappings":"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","sourcesContent":["import React, {Component } from \"react\";\nimport Request from \"../helpers/requests.js\"\n\nclass EditBookingComponent extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      id: this.props.id,\n      date: null,\n      time: null,\n      table: null\n    }\n    this.handleUpdate = this.handleUpdate.bind(this)\n    this.handleDateChange = this.handleDateChange.bind(this)\n    this.handleTimeChange = this.handleTimeChange.bind(this)\n\n}\n\n  // componentWillMount() {\n  //   for (const booking of this.props.allBookings) {\n  //     if (booking.id == this.state.id) {\n  //       this.setState({date: booking.date,\n  //         time: booking.time,\n  //         table: booking.restaurantTable.tableNumber})\n  //     }\n  //   }\n  // }\n\n  handleDateChange(event) {\n    this.setState({date: event.target.value})\n  }\n\n  handleTimeChange(event) {\n    this.setState({time: event.target.value})\n  }\n\n  handleUpdate(event) {\n    event.preventDefault()\n    this.setState({table: event.target.table.value})\n\n    this.verifyDuplicate()\n    // request.patch('bookings/', {})\n}\n  verifyDuplicate() {\n    for (const existingBooking of this.props.allBookings) {\n      if ((existingBooking.time == this.state.time) &&\n        (existingBooking.date == this.state.date) &&\n        (existingBooking.restaurantTable.tableNumber == this.state.table)) {\n          console.log('match')\n        }\n    }\n  }\n\n\n\n  render() {\n    const tables = this.props.tables.map((table, index) => {\n      return <option key={index} value={table.tableNumber}>{table.tableNumber}</option>\n    })\n    return (<div>\n      <form onSubmit={this.handleUpdate}>\n      Table number: <select name=\"table\">\n        {tables}\n      </select>\n        New Date <input type=\"text\" onChange={this.handleDateChange} />\n        New Time <input type=\"text\" onChange={this.handleTimeChange} />\n        Save <input type=\"submit\" />\n      </form>\n    </div>)\n  }\n}\n\n\nexport default EditBookingComponent;\n"]},"metadata":{},"sourceType":"module"}