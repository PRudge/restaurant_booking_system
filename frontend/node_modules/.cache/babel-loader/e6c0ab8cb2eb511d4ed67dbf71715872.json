{"ast":null,"code":"import _classCallCheck from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/src/Components/EditBookingComponent.js\";\nimport React, { Component } from \"react\";\nimport Request from \"../helpers/requests.js\";\n\nvar EditBookingComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditBookingComponent, _Component);\n\n  function EditBookingComponent(props) {\n    var _this;\n\n    _classCallCheck(this, EditBookingComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditBookingComponent).call(this, props));\n    _this.state = {\n      id: _this.props.id,\n      date: null,\n      time: null,\n      table: null,\n      customer_id: null\n    };\n    _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDateChange = _this.handleDateChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTimeChange = _this.handleTimeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditBookingComponent, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var request = new Request();\n      request.get('/customers').then(function (customers) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = customers._embedded[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var customer = _step.value;\n            console.log(customer.id);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.props.allBookings[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var booking = _step2.value;\n\n          if (booking.id == this.state.id) {\n            console.log(booking);\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"handleDateChange\",\n    value: function handleDateChange(event) {\n      this.setState({\n        date: event.target.value\n      });\n    }\n  }, {\n    key: \"handleTimeChange\",\n    value: function handleTimeChange(event) {\n      this.setState({\n        time: event.target.value\n      });\n    }\n  }, {\n    key: \"handleUpdate\",\n    value: function handleUpdate(event) {\n      event.preventDefault();\n      var table = event.target.table.value;\n\n      if (!this.verifyDuplicate()) {\n        console.log('try again');\n      } else {\n        this.props.editBooking({\n          id: this.state.id,\n          date: this.state.date,\n          time: this.state.time,\n          table: table\n        });\n      }\n    }\n  }, {\n    key: \"verifyDuplicate\",\n    value: function verifyDuplicate() {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.props.allBookings[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var existingBooking = _step3.value;\n\n          if (existingBooking.time == this.state.time && existingBooking.date == this.state.date && existingBooking.restaurantTable.tableNumber == this.state.table) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tables = this.props.tables.map(function (table, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: table.tableNumber,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, table.tableNumber);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Table number: \", React.createElement(\"select\", {\n        name: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, tables), \"New Date \", React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleDateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), \"New Time \", React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleTimeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), \"Save \", React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return EditBookingComponent;\n}(Component);\n\nexport default EditBookingComponent;","map":{"version":3,"sources":["/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/src/Components/EditBookingComponent.js"],"names":["React","Component","Request","EditBookingComponent","props","state","id","date","time","table","customer_id","handleUpdate","bind","handleDateChange","handleTimeChange","request","get","then","customers","_embedded","customer","console","log","allBookings","booking","event","setState","target","value","preventDefault","verifyDuplicate","editBooking","existingBooking","restaurantTable","tableNumber","tables","map","index"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,wBAApB;;IAEMC,oB;;;;;AACJ,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8FAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,EAAE,EAAE,MAAKF,KAAL,CAAWE,EADJ;AAEXC,MAAAA,IAAI,EAAE,IAFK;AAGXC,MAAAA,IAAI,EAAE,IAHK;AAIXC,MAAAA,KAAK,EAAE,IAJI;AAKXC,MAAAA,WAAW,EAAE;AALF,KAAb;AAOA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,uDAAxB;AACA,UAAKE,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBF,IAAtB,uDAAxB;AAXiB;AAYpB;;;;yCACsB;AACnB,UAAMG,OAAO,GAAG,IAAIb,OAAJ,EAAhB;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EACGC,IADH,CACQ,UAAAC,SAAS,EAAI;AAAA;AAAA;AAAA;;AAAA;AACjB,+BAAuBA,SAAS,CAACC,SAAjC,8HAA4C;AAAA,gBAAjCC,QAAiC;AAC1CC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACd,EAArB;AACD;AAHgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIlB,OALH;AAFmB;AAAA;AAAA;;AAAA;AASnB,8BAAoB,KAAKF,KAAL,CAAWmB,WAA/B,mIAA4C;AAAA,cAAnCC,OAAmC;;AAC1C,cAAIA,OAAO,CAAClB,EAAR,IAAc,KAAKD,KAAL,CAAWC,EAA7B,EAAiC;AAC/Be,YAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACD;AACF;AAbkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcpB;;;qCAEgBC,K,EAAO;AACtB,WAAKC,QAAL,CAAc;AAACnB,QAAAA,IAAI,EAAEkB,KAAK,CAACE,MAAN,CAAaC;AAApB,OAAd;AACD;;;qCAEgBH,K,EAAO;AACtB,WAAKC,QAAL,CAAc;AAAClB,QAAAA,IAAI,EAAEiB,KAAK,CAACE,MAAN,CAAaC;AAApB,OAAd;AACD;;;iCAEYH,K,EAAO;AAClBA,MAAAA,KAAK,CAACI,cAAN;AACA,UAAMpB,KAAK,GAAGgB,KAAK,CAACE,MAAN,CAAalB,KAAb,CAAmBmB,KAAjC;;AACA,UAAI,CAAC,KAAKE,eAAL,EAAL,EAA6B;AAC3BT,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,OAFD,MAEO;AACL,aAAKlB,KAAL,CAAW2B,WAAX,CAAuB;AACrBzB,UAAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,EADM;AAErBC,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAFI;AAGrBC,UAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG,IAHI;AAIrBC,UAAAA,KAAK,EAAEA;AAJc,SAAvB;AAMD;AACJ;;;sCACmB;AAAA;AAAA;AAAA;;AAAA;AAChB,8BAA8B,KAAKL,KAAL,CAAWmB,WAAzC,mIAAsD;AAAA,cAA3CS,eAA2C;;AACpD,cAAKA,eAAe,CAACxB,IAAhB,IAAwB,KAAKH,KAAL,CAAWG,IAApC,IACDwB,eAAe,CAACzB,IAAhB,IAAwB,KAAKF,KAAL,CAAWE,IADlC,IAEDyB,eAAe,CAACC,eAAhB,CAAgCC,WAAhC,IAA+C,KAAK7B,KAAL,CAAWI,KAF7D,EAEqE;AACjE,mBAAO,KAAP;AACD;AACJ;AAPe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOd,aAAO,IAAP;AACH;;;6BAIQ;AACP,UAAM0B,MAAM,GAAG,KAAK/B,KAAL,CAAW+B,MAAX,CAAkBC,GAAlB,CAAsB,UAAC3B,KAAD,EAAQ4B,KAAR,EAAkB;AACrD,eAAO;AAAQ,UAAA,GAAG,EAAEA,KAAb;AAAoB,UAAA,KAAK,EAAE5B,KAAK,CAACyB,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+CzB,KAAK,CAACyB,WAArD,CAAP;AACD,OAFc,CAAf;AAGA,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN;AAAM,QAAA,QAAQ,EAAE,KAAKvB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACc;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACXwB,MADW,CADd,eAIW;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKtB,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJX,eAKW;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKC,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALX,WAMO;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANP,CADM,CAAR;AAUD;;;;EA9EgCb,S;;AAkFnC,eAAeE,oBAAf","sourcesContent":["import React, {Component } from \"react\";\nimport Request from \"../helpers/requests.js\"\n\nclass EditBookingComponent extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      id: this.props.id,\n      date: null,\n      time: null,\n      table: null,\n      customer_id: null\n    }\n    this.handleUpdate = this.handleUpdate.bind(this)\n    this.handleDateChange = this.handleDateChange.bind(this)\n    this.handleTimeChange = this.handleTimeChange.bind(this)\n}\n  componentWillMount() {\n    const request = new Request();\n    request.get('/customers')\n      .then(customers => {\n        for (const customer of customers._embedded) {\n          console.log(customer.id)\n        }\n      })\n\n    for (let booking of this.props.allBookings) {\n      if (booking.id == this.state.id) {\n        console.log(booking)\n      }\n    }\n  }\n\n  handleDateChange(event) {\n    this.setState({date: event.target.value})\n  }\n\n  handleTimeChange(event) {\n    this.setState({time: event.target.value})\n  }\n\n  handleUpdate(event) {\n    event.preventDefault()\n    const table = event.target.table.value\n    if (!this.verifyDuplicate()) {\n      console.log('try again')\n    } else {\n      this.props.editBooking({\n        id: this.state.id,\n        date: this.state.date,\n        time: this.state.time,\n        table: table\n      })\n    }\n}\n  verifyDuplicate() {\n    for (const existingBooking of this.props.allBookings) {\n      if ((existingBooking.time == this.state.time) &&\n        (existingBooking.date == this.state.date) &&\n        (existingBooking.restaurantTable.tableNumber == this.state.table)) {\n          return false\n        }\n    } return true\n  }\n\n\n\n  render() {\n    const tables = this.props.tables.map((table, index) => {\n      return <option key={index} value={table.tableNumber}>{table.tableNumber}</option>\n    })\n    return (<div>\n      <form onSubmit={this.handleUpdate}>\n      Table number: <select name=\"table\">\n        {tables}\n      </select>\n        New Date <input type=\"text\" onChange={this.handleDateChange} />\n        New Time <input type=\"text\" onChange={this.handleTimeChange} />\n        Save <input type=\"submit\" />\n      </form>\n    </div>)\n  }\n}\n\n\nexport default EditBookingComponent;\n"]},"metadata":{},"sourceType":"module"}