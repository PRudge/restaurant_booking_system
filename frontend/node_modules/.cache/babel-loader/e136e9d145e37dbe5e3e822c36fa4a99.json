{"ast":null,"code":"import _classCallCheck from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/src/App.js\";\nimport React, { Component } from 'react';\nimport RestaurantViewContainer from \"./containers/RestaurantViewContainer\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport NewBookingContainer from \"./containers/NewBookingContainer.js\";\nimport EditBookingComponent from \"./Components/EditBookingComponent.js\";\nimport CustomerListContainer from \"./containers/CustomerListContainer.js\";\nimport Request from \"./helpers/requests.js\";\nimport './App.css';\nimport NavBar from \"./NavBar.js\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      tables: [],\n      customers: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var request = new Request();\n      request.get('/customers').then(function (res) {\n        _this2.setState({\n          customers: res._embedded.customers\n        });\n      });\n      this.getTables();\n    }\n  }, {\n    key: \"getTables\",\n    value: function getTables() {\n      var _this3 = this;\n\n      var request = new Request();\n      request.get('restaurantTables/').then(function (res) {\n        _this3.setState({\n          tables: res._embedded.restaurantTables\n        });\n\n        var allTables = _this3.state.tables;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = allTables[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var table = _step.value;\n            table.taken = false;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        _this3.setState({\n          tables: allTables\n        });\n      });\n    }\n  }, {\n    key: \"getBookingsByDate\",\n    value: function getBookingsByDate(url) {\n      var _this4 = this;\n\n      var request = new Request();\n      request.get(url).then(function (res) {\n        _this4.setState({\n          bookings: res\n        });\n\n        _this4.getTables();\n      });\n    }\n  }, {\n    key: \"getBookingsByHour\",\n    value: function getBookingsByHour(url) {\n      var _this5 = this;\n\n      var request = new Request();\n      request.get(url).then(function (res) {\n        _this5.setState({\n          bookings: res\n        });\n\n        _this5.updateTakenTables();\n      });\n    }\n  }, {\n    key: \"updateTakenTables\",\n    value: function updateTakenTables() {\n      var newTableState = this.state.tables;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.state.bookings[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var booking = _step2.value;\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = newTableState[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var freeTable = _step3.value;\n\n              if (booking.restaurantTable.id === freeTable.tableNumber) {\n                freeTable.taken = true;\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      this.setState({\n        tables: newTableState\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        getAllCustomers: this.componentWillMount,\n        component: RestaurantViewContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/newbooking/:id\",\n        render: function render(props) {\n          var id = props.match.params.id;\n          return React.createElement(NewBookingContainer, {\n            id: id,\n            customers: _this6.state.customers,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/editbooking/:id\",\n        render: function render(props) {\n          var id = props.match.params.id;\n          return React.createElement(EditBookingComponent, {\n            id: id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/customers\",\n        render: function render(props) {\n          return React.createElement(CustomerListContainer, {\n            customers: _this6.state.customers,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/src/App.js"],"names":["React","Component","RestaurantViewContainer","BrowserRouter","Router","Route","Switch","NewBookingContainer","EditBookingComponent","CustomerListContainer","Request","NavBar","App","props","state","tables","customers","request","get","then","res","setState","_embedded","getTables","restaurantTables","allTables","table","taken","url","bookings","updateTakenTables","newTableState","booking","freeTable","restaurantTable","id","tableNumber","componentWillMount","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport RestaurantViewContainer from \"./containers/RestaurantViewContainer\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport NewBookingContainer from \"./containers/NewBookingContainer.js\";\nimport EditBookingComponent from \"./Components/EditBookingComponent.js\";\nimport CustomerListContainer from \"./containers/CustomerListContainer.js\"\nimport Request from \"./helpers/requests.js\";\n\nimport './App.css';\nimport NavBar from \"./NavBar.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      tables: [],\n      customers: []\n    }\n  }\n\n  componentWillMount() {\n    const request = new Request();\n\n    request.get('/customers')\n      .then(res => {\n        this.setState({customers: res._embedded.customers})\n      })\n\n    this.getTables()\n  }\n\n  getTables() {\n    const request = new Request();\n    request.get('restaurantTables/')\n      .then(res => {\n        this.setState({tables: res._embedded.restaurantTables})\n        const allTables = this.state.tables\n        for (const table of allTables) {\n          table.taken = false;\n        }\n        this.setState({tables: allTables})\n      })\n  }\n\n  getBookingsByDate(url) {\n    const request = new Request();\n    request.get(url)\n      .then(res => {\n        this.setState({bookings: res})\n        this.getTables()\n      })\n  }\n\n  getBookingsByHour(url) {\n    const request = new Request();\n    request.get(url)\n      .then(res => {\n        this.setState({bookings: res})\n        this.updateTakenTables()\n      })\n  }\n\n  updateTakenTables() {\n    const newTableState = this.state.tables;\n    for (const booking of this.state.bookings) {\n      for (const freeTable of newTableState) {\n        if (booking.restaurantTable.id === freeTable.tableNumber) {\n          freeTable.taken = true;\n        }\n      }\n    }\n    this.setState({tables: newTableState})\n  }\n\n\n  render() {\n    return (\n      <Router >\n        <React.Fragment>\n          <NavBar />\n          <Switch>\n            <Route exact path = \"/\" getAllCustomers={this.componentWillMount} component={RestaurantViewContainer} />\n              <Route exact path=\"/newbooking/:id\" render = {(props) =>{\n                const id = props.match.params.id;\n                return <NewBookingContainer id = {id} customers = {this.state.customers}/>\n                }}\n              />\n            <Route exact path=\"/editbooking/:id\" render = {(props) =>{\n                const id = props.match.params.id;\n                return <EditBookingComponent id = {id} />\n                }}\n              />\n            <Route exact path = \"/customers\" render = {(props) => {\n\n                return <CustomerListContainer customers = {this.state.customers}/>\n                }} />\n          </Switch>\n        </React.Fragment>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}