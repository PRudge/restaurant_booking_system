{"ast":null,"code":"import _classCallCheck from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/src/Components/EditBookingComponent.js\";\nimport React, { Component } from \"react\";\nimport \"./css/EditBooking.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Request from \"../helpers/requests.js\";\n\nvar EditBookingComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditBookingComponent, _Component);\n\n  function EditBookingComponent(props) {\n    var _this;\n\n    _classCallCheck(this, EditBookingComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditBookingComponent).call(this, props));\n    _this.state = {\n      id: _this.props.id,\n      date: new Date(),\n      time: null,\n      table: null,\n      customer: null,\n      error: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDateChange = _this.handleDateChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTimeChange = _this.handleTimeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditBookingComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(date) {\n      this.setState({\n        date: date\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.props.customers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var customer = _step.value;\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = customer.bookings[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var booking = _step2.value;\n\n              if (booking.id == this.state.id) {\n                this.setState({\n                  customer: customer.id\n                });\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"handleDateChange\",\n    value: function handleDateChange(event) {\n      this.setState({\n        date: event.target.value\n      });\n    }\n  }, {\n    key: \"handleTimeChange\",\n    value: function handleTimeChange(event) {\n      this.setState({\n        time: event.target.value\n      });\n    }\n  }, {\n    key: \"handleUpdate\",\n    value: function handleUpdate(event) {\n      event.preventDefault();\n      var time = event.target.time.value;\n      var table = event.target.table.value;\n      this.setState({\n        table: table\n      });\n\n      if (!this.verifyDuplicate(time, table)) {\n        this.createError();\n      } else {\n        this.props.editBooking({\n          id: this.state.id,\n          day: this.state.date.getDate(),\n          month: this.state.date.getMonth() + 1,\n          time: time,\n          table: table,\n          customer: this.state.customer\n        });\n        this.props.updateData();\n      }\n    }\n  }, {\n    key: \"verifyDuplicate\",\n    value: function verifyDuplicate(time, table) {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.props.allBookings[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var existingBooking = _step3.value;\n          console.log(existingBooking.month, existingBooking.day, this.state.date.getDate(), this.state.date.getMonth() + 1);\n          var day = this.state.date.getDate();\n          var month = this.state.date.getMonth() + 1;\n\n          if (existingBooking.time == time && existingBooking.day == day && existingBooking.month == month && existingBooking.restaurantTable.tableNumber == table) {\n            console.log('match');\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"createError\",\n    value: function createError() {\n      var _this2 = this;\n\n      this.setState({\n        error: true\n      });\n      console.log('error');\n      setTimeout(function () {\n        _this2.setState({\n          error: false\n        });\n      }, 4000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tables = this.props.tables.map(function (table, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: table.tableNumber,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, table.tableNumber);\n      });\n      var error = this.state.error ? React.createElement(\"p\", {\n        className: \"errorMsg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Duplicate found, choose a different table/time\") : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"editbooking\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Edit Booking\"), React.createElement(\"form\", {\n        onSubmit: this.handleUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Table number:\"), React.createElement(\"select\", {\n        name: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, tables), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"New Date:\"), \" \", React.createElement(DatePicker, {\n        selected: this.state.date,\n        onChange: this.handleChange,\n        className: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"New Time:\"), \" \", React.createElement(\"select\", {\n        name: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"15:00\"), React.createElement(\"option\", {\n        value: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"16:00\"), React.createElement(\"option\", {\n        value: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"17:00\"), React.createElement(\"option\", {\n        value: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"18:00\"), React.createElement(\"option\", {\n        value: \"7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"19:00\"), React.createElement(\"option\", {\n        value: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"20:00\"), React.createElement(\"option\", {\n        value: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"21:00\"), React.createElement(\"option\", {\n        value: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"22:00\")), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), error);\n    }\n  }]);\n\n  return EditBookingComponent;\n}(Component);\n\nexport default EditBookingComponent;","map":{"version":3,"sources":["/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/src/Components/EditBookingComponent.js"],"names":["React","Component","DatePicker","Request","EditBookingComponent","props","state","id","date","Date","time","table","customer","error","handleChange","bind","handleUpdate","handleDateChange","handleTimeChange","setState","customers","bookings","booking","event","target","value","preventDefault","verifyDuplicate","createError","editBooking","day","getDate","month","getMonth","updateData","allBookings","existingBooking","console","log","restaurantTable","tableNumber","setTimeout","tables","map","index"],"mappings":"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","sourcesContent":["import React, {Component } from \"react\";\nimport \"./css/EditBooking.css\"\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport Request from \"../helpers/requests.js\"\n\nclass EditBookingComponent extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      id: this.props.id,\n      date: new Date(),\n      time: null,\n      table: null,\n      customer: null,\n      error: false\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this)\n    this.handleDateChange = this.handleDateChange.bind(this)\n    this.handleTimeChange = this.handleTimeChange.bind(this)\n}\n\n  handleChange(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  componentWillMount() {\n    for (const customer of this.props.customers) {\n      for (const booking of customer.bookings) {\n        if (booking.id == this.state.id) {\n          this.setState({ customer : customer.id })\n        }\n      }\n    }\n  }\n\n  handleDateChange(event) {\n    this.setState({date: event.target.value})\n  }\n\n  handleTimeChange(event) {\n    this.setState({time: event.target.value})\n  }\n\n  handleUpdate(event) {\n    event.preventDefault()\n    const time = event.target.time.value;\n    const table = event.target.table.value\n    this.setState({table: table})\n    if (!this.verifyDuplicate(time, table)) {\n      this.createError()\n    } else {\n      this.props.editBooking({\n        id: this.state.id,\n        day: this.state.date.getDate(),\n        month: this.state.date.getMonth() + 1,\n        time: time,\n        table: table,\n        customer: this.state.customer\n      })\n      this.props.updateData()\n    }\n  }\n\n\n\n  verifyDuplicate(time, table) {\n    for (const existingBooking of this.props.allBookings) {\n      console.log(existingBooking.month, existingBooking.day, this.state.date.getDate(), this.state.date.getMonth() + 1)\n      let day = this.state.date.getDate();\n      let month = this.state.date.getMonth() + 1\n      if ((existingBooking.time == time) &&\n        (existingBooking.day == day) &&\n        (existingBooking.month == month) &&\n        (existingBooking.restaurantTable.tableNumber == table)) {\n          console.log('match')\n          return false\n        }\n    }\n    return true\n  }\n\n  createError() {\n    this.setState({error: true})\n    console.log('error')\n    setTimeout(()=>{\n      this.setState({error:false})\n    }, 4000)\n  }\n\n\n\n  render() {\n    const tables = this.props.tables.map((table, index) => {\n      return <option key={index} value={table.tableNumber}>{table.tableNumber}</option>\n    })\n\n    const error = (this.state.error) ? <p className=\"errorMsg\">Duplicate found, choose a different table/time</p>\n      : <p></p>\n\n\n    return (<div className=\"editbooking\">\n        <h4>Edit Booking</h4>\n      <form onSubmit={this.handleUpdate}>\n      <label>Table number:</label>\n       <select name=\"table\">\n        {tables}\n      </select><br/>\n    <label>New Date:</label> <DatePicker\n      selected={this.state.date}\n      onChange={this.handleChange}\n      className=\"blue\"\n      /> <br />\n    <label>New Time:</label> <select name=\"time\">\n          <option value=\"3\">15:00</option>\n          <option value=\"4\">16:00</option>\n          <option value=\"5\">17:00</option>\n          <option value=\"6\">18:00</option>\n          <option value=\"7\">19:00</option>\n          <option value=\"8\">20:00</option>\n          <option value=\"9\">21:00</option>\n          <option value=\"10\">22:00</option>\n        </select> <br/>\n      <input type=\"submit\" value=\"Save\"/>\n      </form>\n      {error}\n    </div>)\n  }\n}\n\n\nexport default EditBookingComponent;\n"]},"metadata":{},"sourceType":"module"}