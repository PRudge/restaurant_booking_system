{"ast":null,"code":"import _classCallCheck from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/src/App.js\";\nimport React, { Component } from 'react';\nimport RestaurantViewContainer from \"./containers/RestaurantViewContainer\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport NewBookingContainer from \"./containers/NewBookingContainer.js\";\nimport EditBookingComponent from \"./Components/EditBookingComponent.js\";\nimport CustomerListContainer from \"./containers/CustomerListContainer.js\";\nimport Request from \"./helpers/requests.js\";\nimport './App.css';\nimport NavBar from \"./NavBar.js\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      tables: [],\n      customers: [],\n      bookings: [],\n      allBookings: []\n    };\n    _this.getBookingsByDate = _this.getBookingsByDate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getBookingsByHour = _this.getBookingsByHour.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var request = new Request();\n      request.get('/customers').then(function (res) {\n        _this2.setState({\n          customers: res._embedded.customers\n        });\n      });\n      this.getTables();\n    }\n  }, {\n    key: \"allBookings\",\n    value: function allBookings() {\n      var _this3 = this;\n\n      var request = new Request();\n      request.get('bookings/').then(function (res) {\n        _this3.setState({\n          allBookings: res._embedded.bookings\n        });\n\n        var allTables = _this3.state.tables;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = allTables[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var table = _step.value;\n            table.taken = false;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        _this3.setState({\n          tables: allTables\n        });\n      });\n    }\n  }, {\n    key: \"getTables\",\n    value: function getTables() {\n      var _this4 = this;\n\n      var request = new Request();\n      request.get('restaurantTables/').then(function (res) {\n        _this4.setState({\n          tables: res._embedded.bookings\n        });\n\n        var allTables = _this4.state.tables;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = allTables[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var table = _step2.value;\n            table.taken = false;\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        _this4.setState({\n          tables: allTables\n        });\n      });\n    }\n  }, {\n    key: \"getBookingsByDate\",\n    value: function getBookingsByDate(url) {\n      var _this5 = this;\n\n      var request = new Request();\n      request.get(url).then(function (res) {\n        _this5.setState({\n          bookings: res\n        });\n\n        _this5.getTables();\n      });\n    }\n  }, {\n    key: \"getBookingsByHour\",\n    value: function getBookingsByHour(url) {\n      var _this6 = this;\n\n      var request = new Request();\n      request.get(url).then(function (res) {\n        _this6.setState({\n          bookings: res\n        });\n\n        _this6.updateTakenTables();\n      });\n    }\n  }, {\n    key: \"updateTakenTables\",\n    value: function updateTakenTables() {\n      var newTableState = this.state.tables;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.state.bookings[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var booking = _step3.value;\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = newTableState[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var freeTable = _step4.value;\n\n              if (booking.restaurantTable.id === freeTable.tableNumber) {\n                freeTable.taken = true;\n              }\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this.setState({\n        tables: newTableState\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(RestaurantViewContainer, {\n            getAllCustomers: _this7.componentWillMount,\n            getBookingsByDate: _this7.getBookingsByDate,\n            getBookingsByHour: _this7.getBookingsByHour,\n            customers: _this7.state.customers,\n            bookings: _this7.state.bookings,\n            tables: _this7.state.tables,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/newbooking/:id/:date\",\n        render: function render(props) {\n          var id = props.match.params.id;\n          var date = props.match.params.date;\n          return React.createElement(NewBookingContainer, {\n            id: id,\n            customers: _this7.state.customers,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/editbooking/:id\",\n        render: function render(props) {\n          var id = props.match.params.id;\n          return React.createElement(EditBookingComponent, {\n            id: id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/customers\",\n        render: function render(props) {\n          return React.createElement(CustomerListContainer, {\n            customers: _this7.state.customers,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/src/App.js"],"names":["React","Component","RestaurantViewContainer","BrowserRouter","Router","Route","Switch","NewBookingContainer","EditBookingComponent","CustomerListContainer","Request","NavBar","App","props","state","tables","customers","bookings","allBookings","getBookingsByDate","bind","getBookingsByHour","request","get","then","res","setState","_embedded","getTables","allTables","table","taken","url","updateTakenTables","newTableState","booking","freeTable","restaurantTable","id","tableNumber","console","log","componentWillMount","match","params","date"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport RestaurantViewContainer from \"./containers/RestaurantViewContainer\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport NewBookingContainer from \"./containers/NewBookingContainer.js\";\nimport EditBookingComponent from \"./Components/EditBookingComponent.js\";\nimport CustomerListContainer from \"./containers/CustomerListContainer.js\"\nimport Request from \"./helpers/requests.js\";\n\nimport './App.css';\nimport NavBar from \"./NavBar.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      tables: [],\n      customers: [],\n      bookings: [],\n      allBookings: []\n    }\n    this.getBookingsByDate = this.getBookingsByDate.bind(this)\n    this.getBookingsByHour = this.getBookingsByHour.bind(this)\n  }\n\n  componentWillMount() {\n    const request = new Request();\n    request.get('/customers')\n      .then(res => {\n        this.setState({customers: res._embedded.customers})\n      })\n\n    this.getTables()\n  }\n\n  allBookings(){\n    const request = new Request();\n    request.get('bookings/')\n      .then(res => {\n        this.setState({allBookings: res._embedded.bookings})\n        const allTables = this.state.tables\n        for (const table of allTables) {\n          table.taken = false;\n        }\n        this.setState({tables: allTables})\n      })\n  }\n\n  getTables() {\n    const request = new Request();\n    request.get('restaurantTables/')\n      .then(res => {\n        this.setState({tables: res._embedded.bookings})\n        const allTables = this.state.tables\n        for (const table of allTables) {\n          table.taken = false;\n        }\n        this.setState({tables: allTables})\n      })\n  }\n\n\n\n  getBookingsByDate(url) {\n    const request = new Request();\n    request.get(url)\n      .then(res => {\n        this.setState({bookings: res})\n        this.getTables()\n      })\n  }\n\n  getBookingsByHour(url) {\n    const request = new Request();\n    request.get(url)\n      .then(res => {\n        this.setState({bookings: res})\n        this.updateTakenTables()\n      })\n  }\n\n  updateTakenTables() {\n    const newTableState = this.state.tables;\n    for (const booking of this.state.bookings) {\n      for (const freeTable of newTableState) {\n        if (booking.restaurantTable.id === freeTable.tableNumber) {\n          freeTable.taken = true;\n        }\n      }\n    }\n    this.setState({tables: newTableState})\n  }\n\n  componentDidMount() {\n    console.log(this.state)\n  }\n\n  render() {\n    return (\n      <Router >\n        <React.Fragment>\n          <NavBar />\n          <Switch>\n            <Route exact path = \"/\" render = {(props) => {\n              return <RestaurantViewContainer\n              getAllCustomers={this.componentWillMount}\n              getBookingsByDate={this.getBookingsByDate}\n              getBookingsByHour={this.getBookingsByHour}\n              customers={this.state.customers}\n              bookings={this.state.bookings}\n              tables={this.state.tables}/>\n              }}\n\n              />\n            <Route exact path=\"/newbooking/:id/:date\" render = {(props) =>{\n                const id = props.match.params.id;\n                const date = props.match.params.date\n                return <NewBookingContainer id = {id} customers = {this.state.customers}/>\n                }}\n              />\n\n            <Route exact path=\"/editbooking/:id\" render = {(props) =>{\n                const id = props.match.params.id;\n                return <EditBookingComponent id = {id}/>\n                }}\n              />\n\n            <Route exact path = \"/customers\" render = {(props) => {\n                return <CustomerListContainer customers = {this.state.customers}/>\n                }} />\n\n          </Switch>\n        </React.Fragment>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}