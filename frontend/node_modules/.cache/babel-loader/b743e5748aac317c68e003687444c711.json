{"ast":null,"code":"import _classCallCheck from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/src/Components/EditBookingComponent.js\";\nimport React, { Component } from \"react\";\nimport Request from \"../helpers/requests.js\";\n\nvar EditBookingComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditBookingComponent, _Component);\n\n  function EditBookingComponent(props) {\n    var _this;\n\n    _classCallCheck(this, EditBookingComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditBookingComponent).call(this, props));\n    _this.state = {\n      id: _this.props.id,\n      date: null,\n      time: null,\n      table: null,\n      customer: null,\n      error: false\n    };\n    _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDateChange = _this.handleDateChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTimeChange = _this.handleTimeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditBookingComponent, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.props.customers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var customer = _step.value;\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = customer.bookings[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var booking = _step2.value;\n\n              if (booking.id == this.state.id) {\n                this.setState({\n                  customer: customer.id\n                });\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"handleDateChange\",\n    value: function handleDateChange(event) {\n      this.setState({\n        date: event.target.value\n      });\n    }\n  }, {\n    key: \"handleTimeChange\",\n    value: function handleTimeChange(event) {\n      this.setState({\n        time: event.target.value\n      });\n    }\n  }, {\n    key: \"handleUpdate\",\n    value: function handleUpdate(event) {\n      event.preventDefault();\n      var time = event.target.time.value;\n      var table = event.target.table.value;\n      this.setState({\n        table: table\n      });\n\n      if (!this.verifyDuplicate(time, table)) {\n        this.createError();\n      } else {\n        this.props.editBooking({\n          id: this.state.id,\n          date: this.state.date,\n          time: time,\n          table: table,\n          customer: this.state.customer\n        });\n        this.props.updateData();\n      }\n    }\n  }, {\n    key: \"verifyDuplicate\",\n    value: function verifyDuplicate(time, table) {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.props.allBookings[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var existingBooking = _step3.value;\n\n          if (existingBooking.time == time && existingBooking.date == this.state.date && existingBooking.restaurantTable.tableNumber == table) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"createError\",\n    value: function createError() {\n      var _this2 = this;\n\n      this.setState({\n        error: true\n      });\n      console.log('error');\n      setTimeout(function () {\n        _this2.setState({\n          error: false\n        });\n      }, 4000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tables = this.props.tables.map(function (table, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: table.tableNumber,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, table.tableNumber);\n      });\n      var error = this.state.error ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Duplicate found, choose a different table/time\") : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Table number: \", React.createElement(\"select\", {\n        name: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, tables), \"New Date \", React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleDateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), \"New Time \", React.createElement(\"select\", {\n        name: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"15:00\"), React.createElement(\"option\", {\n        value: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"16:00\"), React.createElement(\"option\", {\n        value: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"17:00\"), React.createElement(\"option\", {\n        value: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"18:00\"), React.createElement(\"option\", {\n        value: \"7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"19:00\"), React.createElement(\"option\", {\n        value: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"20:00\"), React.createElement(\"option\", {\n        value: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"21:00\"), React.createElement(\"option\", {\n        value: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"22:00\")), \"Save \", React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), error);\n    }\n  }]);\n\n  return EditBookingComponent;\n}(Component);\n\nexport default EditBookingComponent;","map":{"version":3,"sources":["/Users/martin/Desktop/CodeClan/april/final_project/front_End_Resturant_Booking_System_project/src/Components/EditBookingComponent.js"],"names":["React","Component","Request","EditBookingComponent","props","state","id","date","time","table","customer","error","handleUpdate","bind","handleDateChange","handleTimeChange","customers","bookings","booking","setState","event","target","value","preventDefault","verifyDuplicate","createError","editBooking","updateData","allBookings","existingBooking","restaurantTable","tableNumber","console","log","setTimeout","tables","map","index"],"mappings":"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","sourcesContent":["import React, {Component } from \"react\";\nimport Request from \"../helpers/requests.js\"\n\nclass EditBookingComponent extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      id: this.props.id,\n      date: null,\n      time: null,\n      table: null,\n      customer: null,\n      error: false\n    }\n    this.handleUpdate = this.handleUpdate.bind(this)\n    this.handleDateChange = this.handleDateChange.bind(this)\n    this.handleTimeChange = this.handleTimeChange.bind(this)\n}\n\n  componentWillMount() {\n    for (const customer of this.props.customers) {\n      for (const booking of customer.bookings) {\n        if (booking.id == this.state.id) {\n          this.setState({ customer : customer.id })\n        }\n      }\n    }\n  }\n\n  handleDateChange(event) {\n    this.setState({date: event.target.value})\n  }\n\n  handleTimeChange(event) {\n    this.setState({time: event.target.value})\n  }\n\n  handleUpdate(event) {\n    event.preventDefault()\n    const time = event.target.time.value;\n    const table = event.target.table.value\n    this.setState({table: table})\n    if (!this.verifyDuplicate(time, table)) {\n      this.createError()\n    } else {\n      this.props.editBooking({\n        id: this.state.id,\n        date: this.state.date,\n        time: time,\n        table: table,\n        customer: this.state.customer\n      })\n      this.props.updateData()\n    }\n  }\n\n\n\n  verifyDuplicate(time, table) {\n    for (const existingBooking of this.props.allBookings) {\n      if ((existingBooking.time == time) &&\n        (existingBooking.date == this.state.date) &&\n        (existingBooking.restaurantTable.tableNumber == table)) {\n          return false\n        }\n    }\n    return true\n  }\n\n  createError() {\n    this.setState({error: true})\n    console.log('error')\n    setTimeout(()=>{\n      this.setState({error:false})\n    }, 4000)\n  }\n\n\n\n  render() {\n    const tables = this.props.tables.map((table, index) => {\n      return <option key={index} value={table.tableNumber}>{table.tableNumber}</option>\n    })\n\n    const error = (this.state.error) ? <p>Duplicate found, choose a different table/time</p>\n      : <p></p>\n\n\n    return (<div>\n\n      <form onSubmit={this.handleUpdate}>\n      Table number: <select name=\"table\">\n        {tables}\n      </select>\n        New Date <input type=\"text\" onChange={this.handleDateChange} />\n      New Time <select name=\"time\">\n          <option value=\"3\">15:00</option>\n          <option value=\"4\">16:00</option>\n          <option value=\"5\">17:00</option>\n          <option value=\"6\">18:00</option>\n          <option value=\"7\">19:00</option>\n          <option value=\"8\">20:00</option>\n          <option value=\"9\">21:00</option>\n          <option value=\"10\">22:00</option>\n        </select>\n        Save <input type=\"submit\" />\n      </form>\n      {error}\n    </div>)\n  }\n}\n\n\nexport default EditBookingComponent;\n"]},"metadata":{},"sourceType":"module"}